plot_combined
length(sp_plots)
sp_plots$`Chestnut-collared Longspur`$percent_change
for (i in 1:length(sp_plots)) print(sp_plots[[i]]$percent_change)
print(sp_plots[[i]]$percent_change)
sp_table
write.csv(sp_table,file = "results_summary/projection_table.csv")
write.csv(sp_table,file = "results_summary/projection_table.csv",row.names = FALSE)
species_name
target_species <- read_xlsx("data/species with long term declines (12dec2023).xlsx")
sp_plots <- list()
sp_table <- data.frame()
for (species_name in target_species$Species){
print(species_name)
# 4 letter species abbreviation code
sp_code <- subset(ac, English_Name == species_name)$Species_ID
# Directory where fitted model will be stored
filename <- paste0("fitted_models/",sp_code,".RDS")
# Fit model for this species, save resulting indices
if (file.exists(filename)){
# Load fitted models
sp_results <- readRDS(filename)
# Generate projections
sp_projection <- projection_function(
sp_results,
# Years for calculating baseline index for 'full recovery' (average across these years)
baseline_years = c(1980,1981,1982,1983,1984),
# How far back to calculate "current" trend over)
length_current_trend = 2022-1980, # 30 year trend
# Year in which goals were set
year_goals_are_set = 2022,
# Percent change per year once population reaches its target growth rate
target_trend = 3,
# Goal is to increase growth rate by 0.5% per year, until target it reached
annual_growth_rate_improvement = 0.5,
# Final year of projection
end_of_projection = 2100
)
# If the species has not declined, skip
if (sp_projection$recovery_description$Trend_q0.975 > 0) next
sp_projection$recovery_description <- sp_projection$recovery_description %>%
mutate(Species = species_name) %>%
relocate(Species)
sp_table <- rbind(sp_table,sp_projection$recovery_description)
# Plot time series of population indices
sp_plot_index <- ggplot()+
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0.01),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
geom_ribbon(data = sp_projection$StatusQuo_summary, aes(x = Year, ymin = StatusQuo_q_0.025, ymax = StatusQuo_q_0.975), alpha = 0.2, fill = "orangered")+
geom_line(data = sp_projection$StatusQuo_summary, aes(x = Year, y = StatusQuo_med), col = "orangered", linewidth = 1)+
geom_ribbon(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, ymin = Recovery_q_0.025, ymax = Recovery_q_0.975), alpha = 0.2, fill = "dodgerblue")+
geom_line(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, y = Recovery_med), col = "dodgerblue", linewidth = 1)+
geom_ribbon(data = sp_projection$gam_summary, aes(x = Year, ymin = gam_q_0.025, ymax = gam_q_0.975), alpha = 0.4, fill = "gray50")+
geom_line(data = sp_projection$gam_summary, aes(x = Year, y = gam_med), col = "gray50", linewidth = 1)+
# Observed indices
geom_errorbar(data = subset(sp_projection$indices_summarized, Year >= 1970 & Year <= sp_projection$final_year_of_data),aes(x = Year, ymin = Index_q_0.025, ymax = Index_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$indices_summarized, Year >= 1970  & Year <= sp_projection$final_year_of_data),aes(x = Year, y = Index), col = "gray30")+
ylab("Population Index")+
xlab("Year")+
theme_few()+
ggtitle(species_name)+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds 1970 abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
coord_cartesian(ylim=c(0,max(apply(sp_projection$samps,2,function(x) quantile(x, 0.975)))))+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))
# Plot time series of percent population change, relative to a baseline
sp_plot_percent_change <- ggplot()+
# Year goals were set:
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
# 100%
geom_hline(yintercept = 100, linetype = 2)+
# Observed indices
geom_errorbar(data = subset(sp_projection$percent_change_summary_Obs,Year <= sp_projection$final_year_of_data), aes(x = Year, ymin = Obs_q_0.025, ymax = Obs_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$percent_change_summary_Obs, Year <= sp_projection$final_year_of_data), aes(x = Year, y = Obs_med), col = "gray30")+
# Historical trend
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Historical"), alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med,
col = "Historical"), size = 1)+
# StatusQuo
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Status Quo"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med, col = "Status Quo"), size = 1)+
# Recovery
geom_ribbon(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = Recovery_q_0.025,
ymax = Recovery_q_0.975,
fill = "Recovery Target"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = Recovery_med, col = "Recovery Target"), size = 1)+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))+
scale_fill_manual(values=c("gray50","dodgerblue","orangered"), name = "Scenario")+
scale_color_manual(values=c("black","dodgerblue","orangered"), name = "Scenario")+
ylab("Percent of Baseline abundance")+
xlab("Year")+
ggtitle(species_name)+
coord_cartesian(ylim=c(0,200))+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds Baseline abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
theme_few()
png(paste0("summary_figures/Indices_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
png(paste0("summary_figures/Percent_Change_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_percent_change)
dev.off()
}
write.csv(sp_table,file = "results_summary/projection_table.csv",row.names = FALSE)
}
png(paste0("summary_figures/Indices_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
paste0("summary_figures/Indices_",species_name,".png")
png(paste0("./summary_figures/Indices_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
target_species <- read_xlsx("data/species with long term declines (12dec2023).xlsx")
sp_plots <- list()
sp_table <- data.frame()
for (species_name in target_species$Species){
print(species_name)
# 4 letter species abbreviation code
sp_code <- subset(ac, English_Name == species_name)$Species_ID
# Directory where fitted model will be stored
filename <- paste0("fitted_models/",sp_code,".RDS")
# Fit model for this species, save resulting indices
if (file.exists(filename)){
# Load fitted models
sp_results <- readRDS(filename)
# Generate projections
sp_projection <- projection_function(
sp_results,
# Years for calculating baseline index for 'full recovery' (average across these years)
baseline_years = c(1980,1981,1982,1983,1984),
# How far back to calculate "current" trend over)
length_current_trend = 2022-1980, # 30 year trend
# Year in which goals were set
year_goals_are_set = 2022,
# Percent change per year once population reaches its target growth rate
target_trend = 3,
# Goal is to increase growth rate by 0.5% per year, until target it reached
annual_growth_rate_improvement = 0.5,
# Final year of projection
end_of_projection = 2100
)
# If the species has not declined, skip
if (sp_projection$recovery_description$Trend_q0.975 > 0) next
sp_projection$recovery_description <- sp_projection$recovery_description %>%
mutate(Species = species_name) %>%
relocate(Species)
sp_table <- rbind(sp_table,sp_projection$recovery_description)
# Plot time series of population indices
sp_plot_index <- ggplot()+
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0.01),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
geom_ribbon(data = sp_projection$StatusQuo_summary, aes(x = Year, ymin = StatusQuo_q_0.025, ymax = StatusQuo_q_0.975), alpha = 0.2, fill = "orangered")+
geom_line(data = sp_projection$StatusQuo_summary, aes(x = Year, y = StatusQuo_med), col = "orangered", linewidth = 1)+
geom_ribbon(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, ymin = Recovery_q_0.025, ymax = Recovery_q_0.975), alpha = 0.2, fill = "dodgerblue")+
geom_line(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, y = Recovery_med), col = "dodgerblue", linewidth = 1)+
geom_ribbon(data = sp_projection$gam_summary, aes(x = Year, ymin = gam_q_0.025, ymax = gam_q_0.975), alpha = 0.4, fill = "gray50")+
geom_line(data = sp_projection$gam_summary, aes(x = Year, y = gam_med), col = "gray50", linewidth = 1)+
# Observed indices
geom_errorbar(data = subset(sp_projection$indices_summarized, Year >= 1970 & Year <= sp_projection$final_year_of_data),aes(x = Year, ymin = Index_q_0.025, ymax = Index_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$indices_summarized, Year >= 1970  & Year <= sp_projection$final_year_of_data),aes(x = Year, y = Index), col = "gray30")+
ylab("Population Index")+
xlab("Year")+
theme_few()+
ggtitle(species_name)+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds 1970 abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
coord_cartesian(ylim=c(0,max(apply(sp_projection$samps,2,function(x) quantile(x, 0.975)))))+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))
# Plot time series of percent population change, relative to a baseline
sp_plot_percent_change <- ggplot()+
# Year goals were set:
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
# 100%
geom_hline(yintercept = 100, linetype = 2)+
# Observed indices
geom_errorbar(data = subset(sp_projection$percent_change_summary_Obs,Year <= sp_projection$final_year_of_data), aes(x = Year, ymin = Obs_q_0.025, ymax = Obs_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$percent_change_summary_Obs, Year <= sp_projection$final_year_of_data), aes(x = Year, y = Obs_med), col = "gray30")+
# Historical trend
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Historical"), alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med,
col = "Historical"), size = 1)+
# StatusQuo
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Status Quo"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med, col = "Status Quo"), size = 1)+
# Recovery
geom_ribbon(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = Recovery_q_0.025,
ymax = Recovery_q_0.975,
fill = "Recovery Target"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = Recovery_med, col = "Recovery Target"), size = 1)+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))+
scale_fill_manual(values=c("gray50","dodgerblue","orangered"), name = "Scenario")+
scale_color_manual(values=c("black","dodgerblue","orangered"), name = "Scenario")+
ylab("Percent of Baseline abundance")+
xlab("Year")+
ggtitle(species_name)+
coord_cartesian(ylim=c(0,200))+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds Baseline abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
theme_few()
png(paste0("./summary_figures/Indices_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
png(paste0("./summary_figures/Percent_Change_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_percent_change)
dev.off()
}
write.csv(sp_table,file = "results_summary/projection_table.csv",row.names = FALSE)
}
---
title: 'Proposed framework to set interim population goals for declining species'
target_species <- read_xlsx("data/species with long term declines (12dec2023).xlsx")
sp_plots <- list()
sp_table <- data.frame()
for (species_name in target_species$Species){
print(species_name)
# 4 letter species abbreviation code
sp_code <- subset(ac, English_Name == species_name)$Species_ID
# Directory where fitted model will be stored
filename <- paste0("fitted_models/",sp_code,".RDS")
# Fit model for this species, save resulting indices
if (file.exists(filename)){
# Load fitted models
sp_results <- readRDS(filename)
# Generate projections
sp_projection <- projection_function(
sp_results,
# Years for calculating baseline index for 'full recovery' (average across these years)
baseline_years = c(1980,1981,1982,1983,1984),
# How far back to calculate "current" trend over)
length_current_trend = 2022-1980, # 30 year trend
# Year in which goals were set
year_goals_are_set = 2022,
# Percent change per year once population reaches its target growth rate
target_trend = 3,
# Goal is to increase growth rate by 0.5% per year, until target it reached
annual_growth_rate_improvement = 0.5,
# Final year of projection
end_of_projection = 2100
)
# If the species has not declined, skip
if (sp_projection$recovery_description$Trend_q0.975 > 0) next
sp_projection$recovery_description <- sp_projection$recovery_description %>%
mutate(Species = species_name) %>%
relocate(Species)
sp_table <- rbind(sp_table,sp_projection$recovery_description)
# Plot time series of population indices
sp_plot_index <- ggplot()+
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0.01),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
geom_ribbon(data = sp_projection$StatusQuo_summary, aes(x = Year, ymin = StatusQuo_q_0.025, ymax = StatusQuo_q_0.975), alpha = 0.2, fill = "orangered")+
geom_line(data = sp_projection$StatusQuo_summary, aes(x = Year, y = StatusQuo_med), col = "orangered", linewidth = 1)+
geom_ribbon(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, ymin = Recovery_q_0.025, ymax = Recovery_q_0.975), alpha = 0.2, fill = "dodgerblue")+
geom_line(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, y = Recovery_med), col = "dodgerblue", linewidth = 1)+
geom_ribbon(data = sp_projection$gam_summary, aes(x = Year, ymin = gam_q_0.025, ymax = gam_q_0.975), alpha = 0.4, fill = "gray50")+
geom_line(data = sp_projection$gam_summary, aes(x = Year, y = gam_med), col = "gray50", linewidth = 1)+
# Observed indices
geom_errorbar(data = subset(sp_projection$indices_summarized, Year >= 1970 & Year <= sp_projection$final_year_of_data),aes(x = Year, ymin = Index_q_0.025, ymax = Index_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$indices_summarized, Year >= 1970  & Year <= sp_projection$final_year_of_data),aes(x = Year, y = Index), col = "gray30")+
ylab("Population Index")+
xlab("Year")+
theme_few()+
ggtitle(species_name)+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds 1970 abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
coord_cartesian(ylim=c(0,max(apply(sp_projection$samps,2,function(x) quantile(x, 0.975)))))+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))
# Plot time series of percent population change, relative to a baseline
sp_plot_percent_change <- ggplot()+
# Year goals were set:
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
# 100%
geom_hline(yintercept = 100, linetype = 2)+
# Observed indices
geom_errorbar(data = subset(sp_projection$percent_change_summary_Obs,Year <= sp_projection$final_year_of_data), aes(x = Year, ymin = Obs_q_0.025, ymax = Obs_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$percent_change_summary_Obs, Year <= sp_projection$final_year_of_data), aes(x = Year, y = Obs_med), col = "gray30")+
# Historical trend
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Historical"), alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med,
col = "Historical"), size = 1)+
# StatusQuo
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Status Quo"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med, col = "Status Quo"), size = 1)+
# Recovery
geom_ribbon(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = Recovery_q_0.025,
ymax = Recovery_q_0.975,
fill = "Recovery Target"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = Recovery_med, col = "Recovery Target"), size = 1)+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))+
scale_fill_manual(values=c("gray50","dodgerblue","orangered"), name = "Scenario")+
scale_color_manual(values=c("black","dodgerblue","orangered"), name = "Scenario")+
ylab("Percent of Baseline abundance")+
xlab("Year")+
ggtitle(species_name)+
coord_cartesian(ylim=c(0,200))+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds Baseline abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
theme_few()
png(paste0("./summary_figures/Indices_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
png(paste0("./summary_figures/Percent_Change_",species_name,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_percent_change)
dev.off()
}
}
dev.off()
target_species <- read_xlsx("data/species with long term declines (12dec2023).xlsx")
sp_plots <- list()
sp_table <- data.frame()
for (species_name in target_species$Species){
print(species_name)
# 4 letter species abbreviation code
sp_code <- subset(ac, English_Name == species_name)$Species_ID
# Directory where fitted model will be stored
filename <- paste0("fitted_models/",sp_code,".RDS")
# Fit model for this species, save resulting indices
if (file.exists(filename)){
# Load fitted models
sp_results <- readRDS(filename)
# Generate projections
sp_projection <- projection_function(
sp_results,
# Years for calculating baseline index for 'full recovery' (average across these years)
baseline_years = c(1980,1981,1982,1983,1984),
# How far back to calculate "current" trend over)
length_current_trend = 2022-1980, # 30 year trend
# Year in which goals were set
year_goals_are_set = 2022,
# Percent change per year once population reaches its target growth rate
target_trend = 3,
# Goal is to increase growth rate by 0.5% per year, until target it reached
annual_growth_rate_improvement = 0.5,
# Final year of projection
end_of_projection = 2100
)
# If the species has not declined, skip
if (sp_projection$recovery_description$Trend_q0.975 > 0) next
sp_projection$recovery_description <- sp_projection$recovery_description %>%
mutate(Species = species_name) %>%
relocate(Species)
sp_table <- rbind(sp_table,sp_projection$recovery_description)
# Plot time series of population indices
sp_plot_index <- ggplot()+
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0.01),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
geom_ribbon(data = sp_projection$StatusQuo_summary, aes(x = Year, ymin = StatusQuo_q_0.025, ymax = StatusQuo_q_0.975), alpha = 0.2, fill = "orangered")+
geom_line(data = sp_projection$StatusQuo_summary, aes(x = Year, y = StatusQuo_med), col = "orangered", linewidth = 1)+
geom_ribbon(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, ymin = Recovery_q_0.025, ymax = Recovery_q_0.975), alpha = 0.2, fill = "dodgerblue")+
geom_line(data = subset(sp_projection$Recovery_summary, Year >= sp_projection$year_goals_are_set), aes(x = Year, y = Recovery_med), col = "dodgerblue", linewidth = 1)+
geom_ribbon(data = sp_projection$gam_summary, aes(x = Year, ymin = gam_q_0.025, ymax = gam_q_0.975), alpha = 0.4, fill = "gray50")+
geom_line(data = sp_projection$gam_summary, aes(x = Year, y = gam_med), col = "gray50", linewidth = 1)+
# Observed indices
geom_errorbar(data = subset(sp_projection$indices_summarized, Year >= 1970 & Year <= sp_projection$final_year_of_data),aes(x = Year, ymin = Index_q_0.025, ymax = Index_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$indices_summarized, Year >= 1970  & Year <= sp_projection$final_year_of_data),aes(x = Year, y = Index), col = "gray30")+
ylab("Population Index")+
xlab("Year")+
theme_few()+
ggtitle(species_name)+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds 1970 abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
coord_cartesian(ylim=c(0,max(apply(sp_projection$samps,2,function(x) quantile(x, 0.975)))))+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))
# Plot time series of percent population change, relative to a baseline
sp_plot_percent_change <- ggplot()+
# Year goals were set:
geom_vline(xintercept = sp_projection$year_goals_are_set, size=2, col = "black", alpha = 0.2)+
geom_text(aes(x = sp_projection$year_goals_are_set+1, y = 0),
label = "<- Year goals were set", col = "black", alpha = 0.2,
hjust=0, fontface = "bold", size = 2)+
# 100%
geom_hline(yintercept = 100, linetype = 2)+
# Observed indices
geom_errorbar(data = subset(sp_projection$percent_change_summary_Obs,Year <= sp_projection$final_year_of_data), aes(x = Year, ymin = Obs_q_0.025, ymax = Obs_q_0.975), width = 0, col = "gray30")+
geom_point(data = subset(sp_projection$percent_change_summary_Obs, Year <= sp_projection$final_year_of_data), aes(x = Year, y = Obs_med), col = "gray30")+
# Historical trend
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Historical"), alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year <= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med,
col = "Historical"), size = 1)+
# StatusQuo
geom_ribbon(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = StatusQuo_q_0.025,
ymax = StatusQuo_q_0.975,
fill = "Status Quo"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_StatusQuo, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = StatusQuo_med, col = "Status Quo"), size = 1)+
# Recovery
geom_ribbon(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year,
ymin = Recovery_q_0.025,
ymax = Recovery_q_0.975,
fill = "Recovery Target"),
alpha = 0.2)+
geom_line(data = subset(sp_projection$percent_change_summary_Recovery, Year >= sp_projection$year_goals_are_set),
aes(x = Year, y = Recovery_med, col = "Recovery Target"), size = 1)+
scale_x_continuous(breaks = seq(1970,sp_projection$end_of_projection,10))+
scale_fill_manual(values=c("gray50","dodgerblue","orangered"), name = "Scenario")+
scale_color_manual(values=c("black","dodgerblue","orangered"), name = "Scenario")+
ylab("Percent of Baseline abundance")+
xlab("Year")+
ggtitle(species_name)+
coord_cartesian(ylim=c(0,200))+
labs(subtitle = paste0("\nCurrent Status (",sp_projection$final_year_of_data,"):\n\n",
"Exceeds status quo trajectory: ",sp_projection$Prob_Exceed_StatusQuo,"% chance\n",
"Exceeds recovery trajectory: ",sp_projection$Prob_Exceed_Recovery,"% chance\n",
"Exceeds Baseline abundance: ",sp_projection$Prob_Exceed_Baseline,"% chance\n"))+
theme_few()
png(paste0("./summary_figures/Indices_",sp_code,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_index)
dev.off()
png(paste0("./summary_figures/Percent_Change_",sp_code,".png"), units = "in", width = 8, height = 5, res = 600)
print(sp_plot_percent_change)
dev.off()
}
}
unlink("README_cache", recursive = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
dev = "png",
dev.args = list(type = "cairo-png"),
fig.width = 6,
fig.height = 4,
eval = TRUE,
echo = TRUE,
warning = FALSE,
error = FALSE,
message = FALSE,
knitr::opts_knit$set(root.dir = 'C:/Users/IlesD/OneDrive - EC-EC/Iles/Projects/Landbirds/Interim_Goals_Framework/')
)
